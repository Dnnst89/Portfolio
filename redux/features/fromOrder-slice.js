import { createSlice } from "@reduxjs/toolkit";
// Function to get initial state from storage
const getInitialStateFromStorage = () => {
  // Attempt to get value from storage
  if (typeof window !== "undefined") {
    const storedState = localStorage?.getItem("fromOrderState");
    // If no stored value, return default state
    if (storedState) {
      return { isFromOrderDetail: JSON.parse(storedState) };
    }
  } else {
    return {
      isFromOrderDetail: false,
    };
  }
};
const initialState = getInitialStateFromStorage()
  ? getInitialStateFromStorage()
  : false;

export const fromOrder = createSlice({
  name: "fromOrder",
  initialState,
  reducers: {
    updatefromOrder: (state, action) => {
      // Update state with value provided in action
      state.isFromOrderDetail = action.payload;
      // Save the new state to local storage
      if (typeof window !== "undefined") {
        localStorage.setItem(
          "fromOrderState",
          JSON.stringify(state.isFromOrderDetail)
        );
      }
    },
    isFromOrderDetail: (state, action) => {
      // Update state with value provided in action
      state.isFromOrderDetail = action.payload;
      // Save the new state to local storage
      if (typeof window !== "undefined") {
        localStorage.setItem(
          "fromOrderState",
          JSON.stringify(state.isFromOrderDetail)
        );
      }
    },
  },
});
// Define action creators generated by createSlice
export const { isFromOrderDetail, updatefromOrder } = fromOrder.actions;
// Export reducer generated by createSlice
export default fromOrder.reducer;
