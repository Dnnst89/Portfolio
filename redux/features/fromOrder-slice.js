import { createSlice } from "@reduxjs/toolkit";
let initialState;
if (typeof window !== "undefined") {
  const storedState = localStorage?.getItem("fromOrderState");
  if (storedState) {
    initialState = JSON.parse(storedState);
  } else {
    initialState = false;
  }
} else {
  initialState = false;
}
export const fromOrder = createSlice({
  name: "fromOrder",
  initialState: {initialState},
  reducers: {
    updatefromOrder: (state, action) => {
      // Save the new state to local storage
      if (typeof window !== "undefined") {
        // Update state with value provided in action
        state.isFromOrderDetail = action.payload;
        localStorage.setItem("fromOrderState", JSON.stringify(state));
      }
    },
    isFromOrderDetail: (state, action) => {
      // Update state with value provided in action
      state.isFromOrderDetail = action.payload;
      // Save the new state to local storage
      if (typeof window !== "undefined") {
        // Update state with value provided in action
        state.isFromOrderDetail = action.payload;
        localStorage.setItem("fromOrderState", JSON.stringify(state));
      }
    },
  },
});
// Define action creators generated by createSlice
export const { isFromOrderDetail, updatefromOrder } = fromOrder.actions;
// Export reducer generated by createSlice
export default fromOrder.reducer;